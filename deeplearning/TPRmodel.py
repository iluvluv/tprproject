# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g2aVF-OMLU5Za_f065N38dakS1y911EJ
"""

import numpy as np
import tflite_runtime.interpreter as tflite
import cv2


class Model:
    def __init__(self):
        #self.interpreter = tf.lite.Interpreter(model_path="/content/drive/MyDrive/final_project/model.tflite")
        self.interpreter = tflite.Interpreter(model_path="./model.tflite")
        self.interpreter.allocate_tensors()

        self.input_details = self.interpreter.get_input_details()
        self.output_details = self.interpreter.get_output_details()
        self.input_shape = self.input_details[0]['shape']

        self.height = self.input_details[0]['shape'][1]
        self.width = self.input_details[0]['shape'][2]

    def result(self, img):
        temp = cv2.resize(img, dsize=(self.height, self.width),
                          interpolation=cv2.INTER_LINEAR).astype(np.float32)/255
        input_data = np.expand_dims(temp, axis=0)

        self.interpreter.set_tensor(self.input_details[0]['index'], input_data)
        self.interpreter.invoke()

        output_data = self.interpreter.get_tensor(
            self.output_details[0]['index'])
        print("output : %s" % np.argmax(output_data))
        return output_data
